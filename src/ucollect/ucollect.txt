The `ucollect` binary
=====================

The `ucollect` is the actual binary that watches some network
interfaces and analyzes the packets by several plugins. It then sends
the gathered data to the central server for processing.

Invocation
----------

A configuration directory with UCI configs may be specified as the
first (and only) parameter. If no parameter is set, the directory of
`/etc/config` is used.

The rest of configuration is read from there.

Configuration
-------------

The configuration is read from `/etc/config/ucollect` (or file
`ucollect` from the directory set on command line). It uses the
http://wiki.openwrt.org/doc/uci[uci] system and syntax. An example
config would look like this:

  package 'ucollect'

  config interface
      option ifname 'eth0'
      option promiscuous 1

  config plugin
      option libname 'libplugin_count.so'

  config plugin
      option libname 'libplugin_buckets.so'

  config uplink
      option name localhost
      option service 5678
      option login some_name
      option password "A password"

The `package 'ucollect'` is always the same and should not be changed.
Then there are three kinds of sections.

The `interface` section
~~~~~~~~~~~~~~~~~~~~~~~

This describes one interface to listen on. The option `ifname` specifies
the name of the interface on the system. The option `promiscuous` may
be set to 0 or 1 and specifies if promiscuous mode should be on on the
device. It defaults to 1.

The `plugin` section
~~~~~~~~~~~~~~~~~~~~

Each such section describes one analysis plugin to load. The
(currently only) option, `libname`, specifies the file name of the
library to load as the plugin.

The `uplink` section
~~~~~~~~~~~~~~~~~~~~

It describes the server it should connect to. It contains the dns name
(or ip address) in the `name` option and the port or service name in
in the `service` option.

There's also the login info. The login name is in the `login` option
and password in `password`. However, default compilation
authenticates through libatsha204 and doesn't understant these options
(just omit them).

There should be exactly one instance of this config section.

Signals
-------

Apart from normal signal handling (like terminanig on `SIGINT`), these
two work with configuration:

SIGHUP::
  Re-reads the configuration and applies the changes.
SIGUSR1::
  Reinitialize all the plugins and interfaces according to current
  configuration. The difference from `SIGHUP` is that `SIGHUP` does
  not change a plugin or interface that is the same in the old and new
  versions. This one unloads it first and then loads again.
