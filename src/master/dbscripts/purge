#!/bin/sh

set -ex

. ./dbconfig

TABLES='activities anomalies count_snapshots bandwidth bandwidth_stats refused fake_logs plugin_history'
BATCH_TABLES='pings certs nats spoof'
DATE=$(date -d "$CLEAN_DAYS days ago" "+'%Y-%m-%d'")

(
	echo "BEGIN;"
	# Duplicate the last plugin history event. This way, even if
	# the client is connected for a long time, we won't lose all
	# the events and we shall know what its state is now or a day ago
	echo "INSERT INTO plugin_history (client, name, timestamp, version, hash, active) SELECT DISTINCT ph.client, ph.name, CURRENT_TIMESTAMP AT TIME ZONE 'UTC', ph.version, ph.hash, ph.active FROM plugin_history AS ph JOIN (SELECT client, name, MAX(timestamp) AS timestamp FROM plugin_history GROUP BY client, name) AS latest ON ph.client = latest.client AND ph.name = latest.name AND ph.timestamp = latest.timestamp;"
	for TABLE in $TABLES ; do
		echo "DELETE FROM $TABLE WHERE timestamp < $DATE;"
	done
	for TABLE in $BATCH_TABLES ; do
		echo "DELETE FROM $TABLE WHERE batch < $DATE;"
	done
	echo "DELETE FROM celery_taskmeta WHERE date_done < $DATE;"
	echo "DELETE FROM router_loggedpacket WHERE created_at < $DATE;"
	echo "DELETE FROM router_registrationcode WHERE date < $DATE;"
	echo "DELETE FROM biflows WHERE COALESCE(start_in, start_out) < $DATE;"
	echo "DELETE FROM ssh_sessions WHERE start_time < $DATE;"
	echo "LOCK TABLE fake_blacklist_cache IN SHARE MODE;" # We don't want to conflict with any other updates running
	echo "DELETE FROM fake_blacklist_cache;"
	echo "INSERT INTO fake_blacklist_cache (server, remote, client, score, timestamp) SELECT server, remote, client, score, timestamp FROM fake_blacklist_cache_fill;"
	echo 'COMMIT;'
) | psql -U "$DBCLEANER" -d "$DB" $DBPARAMS
